[DEFAULT]

verbose = True
notification_driver = noop

#
# From oslo.messaging
#

# Auto-delete queues in amqp. (boolean value)
#amqp_auto_delete = false

# Use durable queues in amqp. (boolean value)
# Deprecated group/name - [DEFAULT]/rabbit_durable_queues
#amqp_durable_queues = false

# The default exchange under which topics are scoped. May be
# overridden by an exchange name specified in the transport_url
# option. (string value)
#control_exchange = openstack

# If passed, use a fake RabbitMQ provider. (boolean value)
#fake_rabbit = false

# How long to wait before reconnecting in response to an AMQP consumer
# cancel notification. (floating point value)
#kombu_reconnect_delay = 1.0

# SSL certification authority file (valid only if SSL enabled).
# (string value)
#kombu_ssl_ca_certs =

# SSL cert file (valid only if SSL enabled). (string value)
#kombu_ssl_certfile =

# SSL key file (valid only if SSL enabled). (string value)
#kombu_ssl_keyfile =

# SSL version to use (valid only if SSL enabled). valid values are
# TLSv1, SSLv23 and SSLv3. SSLv2 may be available on some
# distributions. (string value)
#kombu_ssl_version =

# Heartbeat frequency. (integer value)
#matchmaker_heartbeat_freq = 300

# Heartbeat time-to-live. (integer value)
#matchmaker_heartbeat_ttl = 600

# Driver or drivers to handle sending notifications. (multi valued)
#notification_driver =

# AMQP topic used for OpenStack notifications. (list value)
# Deprecated group/name - [rpc_notifier2]/topics
#notification_topics = notifications

# Seconds between connection keepalive heartbeats. (integer value)
#qpid_heartbeat = 60

# Qpid broker hostname. (string value)
#qpid_hostname = localhost

# Qpid HA cluster host:port pairs. (list value)
#qpid_hosts = $qpid_hostname:$qpid_port

# Password for Qpid connection. (string value)
#qpid_password =

# Qpid broker port. (integer value)
#qpid_port = 5672

# Transport to use, either 'tcp' or 'ssl'. (string value)
#qpid_protocol = tcp

# The number of prefetched messages held by receiver. (integer value)
#qpid_receiver_capacity = 1

# Space separated list of SASL mechanisms to use for auth. (string
# value)
#qpid_sasl_mechanisms =

# Whether to disable the Nagle algorithm. (boolean value)
#qpid_tcp_nodelay = true

# The qpid topology version to use.  Version 1 is what was originally
# used by impl_qpid.  Version 2 includes some backwards-incompatible
# changes that allow broker federation to work.  Users should update
# to version 2 when they are able to take everything down, as it
# requires a clean break. (integer value)
#qpid_topology_version = 1

# Username for Qpid connection. (string value)
#qpid_username =

# Use HA queues in RabbitMQ (x-ha-policy: all). If you change this
# option, you must wipe the RabbitMQ database. (boolean value)
#rabbit_ha_queues = false

# The RabbitMQ broker address where a single node is used. (string
# value)
rabbit_host = localhost

# RabbitMQ HA cluster host:port pairs. (list value)
#rabbit_hosts = $rabbit_host:$rabbit_port

# the RabbitMQ login method (string value)
#rabbit_login_method = AMQPLAIN

# Maximum number of RabbitMQ connection retries. Default is 0
# (infinite retry count). (integer value)
#rabbit_max_retries = 0

# The RabbitMQ password. (string value)
rabbit_password = 

# The RabbitMQ broker port where a single node is used. (integer
# value)
#rabbit_port = 5672

# How long to backoff for between retries when connecting to RabbitMQ.
# (integer value)
#rabbit_retry_backoff = 2

# How frequently to retry connecting with RabbitMQ. (integer value)
#rabbit_retry_interval = 1

# Connect over SSL for RabbitMQ. (boolean value)
#rabbit_use_ssl = false

# The RabbitMQ userid. (string value)
rabbit_userid = guest

# The RabbitMQ virtual host. (string value)
#rabbit_virtual_host = /

# The messaging driver to use, defaults to rabbit. Other drivers
# include qpid and zmq. (string value)
#rpc_backend = rabbit

# Seconds to wait before a cast expires (TTL). Only supported by
# impl_zmq. (integer value)
#rpc_cast_timeout = 30

# Size of RPC connection pool. (integer value)
#rpc_conn_pool_size = 30

# Seconds to wait for a response from a call. (integer value)
#rpc_response_timeout = 60

# Size of RPC greenthread pool. (integer value)
#rpc_thread_pool_size = 64

# ZeroMQ bind address. Should be a wildcard (*), an ethernet
# interface, or IP. The "host" option should point or resolve to this
# address. (string value)
#rpc_zmq_bind_address = *

# Number of ZeroMQ contexts, defaults to 1. (integer value)
#rpc_zmq_contexts = 1

# Name of this node. Must be a valid hostname, FQDN, or IP address.
# Must match "host" option, if running Nova. (string value)
#rpc_zmq_host = localhost

# Directory for holding IPC sockets. (string value)
#rpc_zmq_ipc_dir = /var/run/openstack

# MatchMaker driver. (string value)
#rpc_zmq_matchmaker = oslo.messaging._drivers.matchmaker.MatchMakerLocalhost

# ZeroMQ receiver listening port. (integer value)
#rpc_zmq_port = 9501

# Maximum number of ingress messages to locally buffer per topic.
# Default is unlimited. (integer value)
#rpc_zmq_topic_backlog = <None>

# A URL representing the messaging driver to use and its full
# configuration. If not set, we fall back to the rpc_backend option
# and driver specific configuration. (string value)
#transport_url = <None>


[database]

#
# From oslo.db
#

# The back end to use for the database. (string value)
# Deprecated group/name - [DEFAULT]/db_backend
#backend = sqlalchemy

# The SQLAlchemy connection string to use to connect to the database.
# (string value)
# Deprecated group/name - [DEFAULT]/sql_connection
# Deprecated group/name - [DATABASE]/sql_connection
# Deprecated group/name - [sql]/connection
connection = mysql://glance:123@controller/glancedb

# Verbosity of SQL debugging information: 0=None, 100=Everything.
# (integer value)
# Deprecated group/name - [DEFAULT]/sql_connection_debug
#connection_debug = 0

# Add Python stack traces to SQL as comment strings. (boolean value)
# Deprecated group/name - [DEFAULT]/sql_connection_trace
#connection_trace = false

# If True, increases the interval between database connection retries
# up to db_max_retry_interval. (boolean value)
#db_inc_retry_interval = true

# Maximum database connection retries before error is raised. Set to
# -1 to specify an infinite retry count. (integer value)
#db_max_retries = 20

# If db_inc_retry_interval is set, the maximum seconds between
# database connection retries. (integer value)
#db_max_retry_interval = 10

# Seconds between database connection retries. (integer value)
#db_retry_interval = 1

# Timeout before idle SQL connections are reaped. (integer value)
# Deprecated group/name - [DEFAULT]/sql_idle_timeout
# Deprecated group/name - [DATABASE]/sql_idle_timeout
# Deprecated group/name - [sql]/idle_timeout
#idle_timeout = 3600

# If set, use this value for max_overflow with SQLAlchemy. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_max_overflow
# Deprecated group/name - [DATABASE]/sqlalchemy_max_overflow
#max_overflow = <None>

# Maximum number of SQL connections to keep open in a pool. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_max_pool_size
# Deprecated group/name - [DATABASE]/sql_max_pool_size
#max_pool_size = <None>

# Maximum db connection retries during startup. Set to -1 to specify
# an infinite retry count. (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_retries
# Deprecated group/name - [DATABASE]/sql_max_retries
#max_retries = 10

# Minimum number of SQL connections to keep open in a pool. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_min_pool_size
# Deprecated group/name - [DATABASE]/sql_min_pool_size
#min_pool_size = 1

# The SQL mode to be used for MySQL sessions. This option, including
# the default, overrides any server-set SQL mode. To use whatever SQL
# mode is set by the server configuration, set this to no value.
# Example: mysql_sql_mode= (string value)
#mysql_sql_mode = TRADITIONAL

# If set, use this value for pool_timeout with SQLAlchemy. (integer
# value)
# Deprecated group/name - [DATABASE]/sqlalchemy_pool_timeout
#pool_timeout = <None>

# Interval between retries of opening a SQL connection. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_retry_interval
# Deprecated group/name - [DATABASE]/reconnect_interval
#retry_interval = 10

# The SQLAlchemy connection string to use to connect to the slave
# database. (string value)
#slave_connection = <None>

# The file name to use with SQLite. (string value)
# Deprecated group/name - [DEFAULT]/sqlite_db
#sqlite_db = oslo.sqlite

# If True, SQLite uses synchronous mode. (boolean value)
# Deprecated group/name - [DEFAULT]/sqlite_synchronous
#sqlite_synchronous = true

# Enable the experimental use of database reconnect on connection
# lost. (boolean value)
#use_db_reconnect = false

#
# From oslo.db.concurrency
#

# Enable the experimental use of thread pooling for all DB API calls
# (boolean value)
# Deprecated group/name - [DEFAULT]/dbapi_use_tpool
#use_tpool = false


[glance_store]

#
# From glance.store
#

# Default scheme to use to store image data. The scheme must be
# registered by one of the stores defined by the 'stores' config
# option. (string value)
# Deprecated group/name - [DEFAULT]/default_store
default_store = file

# List of stores enabled (list value)
# Deprecated group/name - [DEFAULT]/known_stores
#stores = file,http

#
# From glance.store
#

# Allow to perform insecure SSL requests to cinder (boolean value)
# Deprecated group/name - [DEFAULT]/cinder_api_insecure
#cinder_api_insecure = false

# Location of ca certicates file to use for cinder client requests.
# (string value)
# Deprecated group/name - [DEFAULT]/cinder_ca_certificates_file
#cinder_ca_certificates_file = <None>

# Info to match when looking for cinder in the service catalog. Format
# is : separated values of the form:
# <service_type>:<service_name>:<endpoint_type> (string value)
# Deprecated group/name - [DEFAULT]/cinder_catalog_info
#cinder_catalog_info = volume:cinder:publicURL

# Override service catalog lookup with template for cinder endpoint
# e.g. http://localhost:8776/v1/%(project_id)s (string value)
# Deprecated group/name - [DEFAULT]/cinder_endpoint_template
#cinder_endpoint_template = <None>

# Number of cinderclient retries on failed http calls (integer value)
# Deprecated group/name - [DEFAULT]/cinder_http_retries
#cinder_http_retries = 3

# The reference to the default swift account/backing store parameters
# to use for adding new images. (string value)
# Deprecated group/name - [DEFAULT]/default_swift_reference
#default_swift_reference = ref1

# Directory to which the Filesystem backend store writes images.
# (string value)
# Deprecated group/name - [DEFAULT]/filesystem_store_datadir
filesystem_store_datadir = /var/lib/glance/images/

# List of directories and its priorities to which the Filesystem
# backend store writes images. (multi valued)
# Deprecated group/name - [DEFAULT]/filesystem_store_datadirs
#filesystem_store_datadirs =

# The required permission for created image file. In this way the user
# other service used, e.g. Nova, who consumes the image could be the
# exclusive member of the group that owns the files created. Assigning
# it less then or equal to zero means don't change the default
# permission of the file. This value will be decoded as an octal
# digit. (integer value)
# Deprecated group/name - [DEFAULT]/filesystem_store_file_perm
#filesystem_store_file_perm = 0

# The path to a file which contains the metadata to be returned with
# any location associated with this store.  The file must contain a
# valid JSON dict. (string value)
# Deprecated group/name - [DEFAULT]/filesystem_store_metadata_file
#filesystem_store_metadata_file = <None>

# Database to use (string value)
# Deprecated group/name - [DEFAULT]/mongodb_store_db
#mongodb_store_db = <None>

# Hostname or IP address of the instance to connect to, or a mongodb
# URI, or a list of hostnames / mongodb URIs. If host is an IPv6
# literal it must be enclosed in '[' and ']' characters following the
# RFC2732 URL syntax (e.g. '[::1]' for localhost) (string value)
# Deprecated group/name - [DEFAULT]/mongodb_store_uri
#mongodb_store_uri = <None>

# Region name of this node (string value)
# Deprecated group/name - [DEFAULT]/os_region_name
#os_region_name = <None>

# Ceph configuration file path. If <None>, librados will locate the
# default config. If using cephx authentication, this file should
# include a reference to the right keyring in a client.<USER> section
# (string value)
# Deprecated group/name - [DEFAULT]/rbd_store_ceph_conf
#rbd_store_ceph_conf = /etc/ceph/ceph.conf

# RADOS images will be chunked into objects of this size (in
# megabytes). For best performance, this should be a power of two.
# (integer value)
# Deprecated group/name - [DEFAULT]/rbd_store_chunk_size
#rbd_store_chunk_size = 8

# RADOS pool in which images are stored. (string value)
# Deprecated group/name - [DEFAULT]/rbd_store_pool
#rbd_store_pool = images

# RADOS user to authenticate as (only applicable if using Cephx. If
# <None>, a default will be chosen based on the client. section in
# rbd_store_ceph_conf) (string value)
# Deprecated group/name - [DEFAULT]/rbd_store_user
#rbd_store_user = <None>

# The S3 query token access key. (string value)
# Deprecated group/name - [DEFAULT]/s3_store_access_key
#s3_store_access_key = <None>

# The S3 bucket to be used to store the Glance data. (string value)
# Deprecated group/name - [DEFAULT]/s3_store_bucket
#s3_store_bucket = <None>

# The S3 calling format used to determine the bucket. Either subdomain
# or path can be used. (string value)
# Deprecated group/name - [DEFAULT]/s3_store_bucket_url_format
#s3_store_bucket_url_format = subdomain

# A boolean to determine if the S3 bucket should be created on upload
# if it does not exist or if an error should be returned to the user.
# (boolean value)
# Deprecated group/name - [DEFAULT]/s3_store_create_bucket_on_put
#s3_store_create_bucket_on_put = false

# The host where the S3 server is listening. (string value)
# Deprecated group/name - [DEFAULT]/s3_store_host
#s3_store_host = <None>

# What multipart upload part size, in MB, should S3 use when uploading
# parts. The size must be greater than or equal to 5M. (integer value)
# Deprecated group/name - [DEFAULT]/s3_store_large_object_chunk_size
#s3_store_large_object_chunk_size = 10

# What size, in MB, should S3 start chunking image files and do a
# multipart upload in S3. (integer value)
# Deprecated group/name - [DEFAULT]/s3_store_large_object_size
#s3_store_large_object_size = 100

# The local directory where uploads will be staged before they are
# transferred into S3. (string value)
# Deprecated group/name - [DEFAULT]/s3_store_object_buffer_dir
#s3_store_object_buffer_dir = <None>

# The S3 query token secret key. (string value)
# Deprecated group/name - [DEFAULT]/s3_store_secret_key
#s3_store_secret_key = <None>

# The number of thread pools to perform a multipart upload in S3.
# (integer value)
# Deprecated group/name - [DEFAULT]/s3_store_thread_pools
#s3_store_thread_pools = 10

# IP address of sheep daemon. (string value)
# Deprecated group/name - [DEFAULT]/sheepdog_store_address
#sheepdog_store_address = localhost

# Images will be chunked into objects of this size (in megabytes). For
# best performance, this should be a power of two. (integer value)
# Deprecated group/name - [DEFAULT]/sheepdog_store_chunk_size
#sheepdog_store_chunk_size = 64

# Port of sheep daemon. (integer value)
# Deprecated group/name - [DEFAULT]/sheepdog_store_port
#sheepdog_store_port = 7000

# Whether to use ServiceNET to communicate with the Swift storage
# servers. (boolean value)
# Deprecated group/name - [DEFAULT]/swift_enable_snet
#swift_enable_snet = false

# A list of tenants that will be granted read/write access on all
# Swift containers created by Glance in multi-tenant mode. (list
# value)
# Deprecated group/name - [DEFAULT]/swift_store_admin_tenants
#swift_store_admin_tenants =

# The address where the Swift authentication service is
# listening.(deprecated) (string value)
# Deprecated group/name - [DEFAULT]/swift_store_auth_address
#swift_store_auth_address = <None>

# If True, swiftclient won't check for a valid SSL certificate when
# authenticating. (boolean value)
# Deprecated group/name - [DEFAULT]/swift_store_auth_insecure
#swift_store_auth_insecure = false

# Version of the authentication service to use. Valid versions are 2
# for keystone and 1 for swauth and rackspace. (deprecated) (string
# value)
# Deprecated group/name - [DEFAULT]/swift_store_auth_version
#swift_store_auth_version = 2

# The config file that has the swift account(s)configs. (string value)
# Deprecated group/name - [DEFAULT]/swift_store_config_file
#swift_store_config_file = <None>

# Container within the account that the account should use for storing
# images in Swift. (string value)
# Deprecated group/name - [DEFAULT]/swift_store_container
#swift_store_container = glance

# A boolean value that determines if we create the container if it
# does not exist. (boolean value)
# Deprecated group/name - [DEFAULT]/swift_store_create_container_on_put
#swift_store_create_container_on_put = false

# A string giving the endpoint type of the swift service to use
# (publicURL, adminURL or internalURL). This setting is only used if
# swift_store_auth_version is 2. (string value)
# Deprecated group/name - [DEFAULT]/swift_store_endpoint_type
#swift_store_endpoint_type = publicURL

# Auth key for the user authenticating against the Swift
# authentication service. (deprecated) (string value)
# Deprecated group/name - [DEFAULT]/swift_store_key
#swift_store_key = <None>

# The amount of data written to a temporary disk buffer during the
# process of chunking the image file. (integer value)
# Deprecated group/name - [DEFAULT]/swift_store_large_object_chunk_size
#swift_store_large_object_chunk_size = 200

# The size, in MB, that Glance will start chunking image files and do
# a large object manifest in Swift. (integer value)
# Deprecated group/name - [DEFAULT]/swift_store_large_object_size
#swift_store_large_object_size = 5120

# If set to True, enables multi-tenant storage mode which causes
# Glance images to be stored in tenant specific Swift accounts.
# (boolean value)
# Deprecated group/name - [DEFAULT]/swift_store_multi_tenant
#swift_store_multi_tenant = false

# The region of the swift endpoint to be used for single tenant. This
# setting is only necessary if the tenant has multiple swift
# endpoints. (string value)
# Deprecated group/name - [DEFAULT]/swift_store_region
#swift_store_region = <None>

# The number of times a Swift download will be retried before the
# request fails. (integer value)
# Deprecated group/name - [DEFAULT]/swift_store_retry_get_count
#swift_store_retry_get_count = 0

# A string giving the service type of the swift service to use. This
# setting is only used if swift_store_auth_version is 2. (string
# value)
# Deprecated group/name - [DEFAULT]/swift_store_service_type
#swift_store_service_type = object-store

# If set to False, disables SSL layer compression of https swift
# requests. Setting to False may improve performance for images which
# are already in a compressed format, eg qcow2. (boolean value)
# Deprecated group/name - [DEFAULT]/swift_store_ssl_compression
#swift_store_ssl_compression = true

# The user to authenticate against the Swift authentication service
# (deprecated) (string value)
# Deprecated group/name - [DEFAULT]/swift_store_user
#swift_store_user = <None>

# Allow to perform insecure SSL requests to ESX/VC. (boolean value)
# Deprecated group/name - [DEFAULT]/vmware_api_insecure
#vmware_api_insecure = false

# Number of times VMware ESX/VC server API must be retried upon
# connection related issues. (integer value)
# Deprecated group/name - [DEFAULT]/vmware_api_retry_count
#vmware_api_retry_count = 10

# Inventory path to a datacenter. If the vmware_server_host specified
# is an ESX/ESXi, the vmware_datacenter_path is optional. If
# specified, it should be "ha-datacenter". (string value)
# Deprecated group/name - [DEFAULT]/vmware_datacenter_path
#vmware_datacenter_path = ha-datacenter

# Datastore associated with the datacenter. (string value)
# Deprecated group/name - [DEFAULT]/vmware_datastore_name
#vmware_datastore_name = <None>

# ESX/ESXi or vCenter Server target system. The server value can be an
# IP address or a DNS name. (string value)
# Deprecated group/name - [DEFAULT]/vmware_server_host
#vmware_server_host = <None>

# Password for authenticating with VMware ESX/VC server. (string
# value)
# Deprecated group/name - [DEFAULT]/vmware_server_password
#vmware_server_password = <None>

# Username for authenticating with VMware ESX/VC server. (string
# value)
# Deprecated group/name - [DEFAULT]/vmware_server_username
#vmware_server_username = <None>

# The name of the directory where the glance images will be stored in
# the VMware datastore. (string value)
# Deprecated group/name - [DEFAULT]/vmware_store_image_dir
#vmware_store_image_dir = /openstack_glance

# The interval used for polling remote tasks invoked on VMware ESX/VC
# server. (integer value)
# Deprecated group/name - [DEFAULT]/vmware_task_poll_interval
#vmware_task_poll_interval = 5


[matchmaker_redis]

#
# From oslo.messaging
#

# Host to locate redis. (string value)
#host = 127.0.0.1

# Password for Redis server (optional). (string value)
#password = <None>

# Use this port to connect to redis host. (integer value)
#port = 6379


[matchmaker_ring]

#
# From oslo.messaging
#

# Matchmaker ring file (JSON). (string value)
# Deprecated group/name - [DEFAULT]/matchmaker_ringfile
#ringfile = /etc/oslo/matchmaker_ring.json



[keystone_authtoken]

auth_uri = http://controller:5000/v2.0
identity_uri = http://controller:35357
admin_tenant_name = service
admin_user = glance
admin_password = 123



[paste_deploy]

flavor = keystone
